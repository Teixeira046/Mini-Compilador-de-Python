grammar PythonParser;

code: (stat | condicional)* EOF;

stat: (expr | query) NEWLINE;

condicional
    : 'if' query ':' block
    | 'if' query ':' block 'else' ':' block
    | 'if' query ':' block 'elifBranch+ else' ':' block
    ;

elifBranch
    : 'elif' query ':' block;

block
    : (stat | condicional)+;
    
expr
    : ID                            
    | NUMBER                       
    | expr op=('*'|'/') expr        
    | expr op=('+'|'-') expr        
    | '(' expr ')'                  
    ;

query
    : BOOL
    | query op=('AND' | 'OR' ) query
    | 'NOT' query
    | '(' query ')'
    | expr relOp expr
    ;

relOp: '==' | '!=' | '<' | '<=' | '>' | '>=';

BOOL: 'TRUE' | 'FALSE';

ID: [a-zA-Z_][a-zA-Z0-9_]*;
NUMBER: [0-9]+ ('.' [0-9]+)?;
NEWLINE: '\r'? '\n';
WS: [ \t]+ -> skip;